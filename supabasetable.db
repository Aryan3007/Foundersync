create table users (
  id uuid primary key references auth.users(id),
  full_name text,
  email text,
  created_at timestamp default now()
);


create table simulations (
  id uuid primary key default uuid_generate_v4(),
  user_id uuid references users(id) on delete cascade,
  startup_name text not null,
  description text,
  industry text,
  version int default 1,
  created_at timestamp default now(),
  updated_at timestamp default now()
);




create table agent_outputs (
  id uuid primary key default uuid_generate_v4(),
  simulation_id uuid references simulations(id) on delete cascade,
  agent_name text check (agent_name in ('ceo', 'cto', 'pm', 'designer', 'marketing')),
  output text,
  context text,
  last_updated timestamp default now(),
  UNIQUE(simulation_id, agent_name)
);


create table change_logs (
  id uuid primary key default uuid_generate_v4(),
  simulation_id uuid references simulations(id) on delete cascade,
  agent_name text,
  field text,
  old_value text,
  new_value text,
  modified_by uuid references users(id),
  modified_at timestamp default now(),
  type text check (type in ('manual', 'regenerated', 'applied_from_chat'))
);


create table chat_interactions (
  id uuid primary key default uuid_generate_v4(),
  simulation_id uuid references simulations(id) on delete cascade,
  agent_name text,
  question text,
  answer text,
  created_at timestamp default now()
);

-- Add unique constraint to existing table if it doesn't exist
ALTER TABLE agent_outputs ADD CONSTRAINT agent_outputs_simulation_id_agent_name_key UNIQUE (simulation_id, agent_name);
